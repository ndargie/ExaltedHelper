@model ExaltedHelper.Models.CharmViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CharmViewModel</h4>
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ComboOk, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ComboOk)
                @Html.ValidationMessageFor(model => model.ComboOk)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EssanceRequirement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EssanceRequirement, new { htmlAttributes = new { min = 0, max = 10 } })
                @Html.ValidationMessageFor(model => model.EssanceRequirement)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AbilityRequirement, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AbilityRequirement, new { htmlAttributes = new { min = 0, max = 10 } })
                @Html.ValidationMessageFor(model => model.AbilityRequirement)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExaltedTypes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.SelectedExaltedType, new SelectList(Model.ExaltedTypes, "id", "name"))
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HealthCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HealthCost, new {htmlAttributes = new {min = 0, max = 10}})
                @Html.ValidationMessageFor(model => model.HealthCost)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WillpowerCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WillpowerCost, new { htmlAttributes = new { min = 0, max = 10 } })
                @Html.ValidationMessageFor(model => model.WillpowerCost)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EssanceCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EssanceCost, new { htmlAttributes = new { min = 0, max = 10 } })
                @Html.ValidationMessageFor(model => model.EssanceCost)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button id="btnCreate" name="btnCreate" class="btn btn-default" type="submit">Save</button>
                @*<input type="submit" value="Create" class="btn btn-default" />*@
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $(document).ready(function () {
        $(function () {
            $('#btnCreate').on('click', function () {
                var exaltedType = $(this).text();
                var modelExaltedType = $('#ExaltedType');
                modelExaltedType.text() = exaltedType;
                });
            });
        });
</script>
}
